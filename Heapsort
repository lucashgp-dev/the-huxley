import java.io.*;
import java.util.*;

public class HuxleyCode {

	public static void sort(int arr[]) {
		int n = arr.length;
		int aux = arr.length;

		for (int i = n / 2 - 1; i >= 0; i--)
			heapify(arr, n, i);

		for (int i = n - 1; i > 0; i--) {

			imprimir(arr, aux--);

			int temp = arr[0];
			arr[0] = arr[i];
			arr[i] = temp;

			heapify(arr, i, 0);

		}

		imprimir(arr, aux--);
	}

	public static void heapify(int arr[], int n, int i) {
		int largest = i;
		int l = 2 * i + 1;
		int r = 2 * i + 2;

		if (l < n && arr[l] > arr[largest])
			largest = l;

		if (r < n && arr[r] > arr[largest])
			largest = r;

		if (largest != i) {
			int swap = arr[i];
			arr[i] = arr[largest];
			arr[largest] = swap;

			heapify(arr, n, largest);
		}
	}

	public static void imprimir(int arr[], int x) {

		int max = arr[0];
		System.out.print("Estado Atual da Heap:");
		for (int i = 0; i < x; i++) {
			if (max < arr[i])
				max = arr[i];

			if (i != (x - 1)) {
				System.out.printf(" %d |", arr[i]);
			} else {
				System.out.printf(" %d\n", arr[i]);
			}
		}

		if (x != 1)
			System.out.println("Maior elemento neste passo: " + max);
	}

	public static int[] convertArray() {

		Scanner sc = new Scanner(System.in);
		String dados[];

		String entrada = sc.nextLine();
		dados = entrada.split(" ");

		int arr[] = new int[dados.length];

		for (int i = 0; i < dados.length; i++)
			arr[i] = Integer.parseInt(dados[i]);

		sc.close();

		return arr;
	}

	static void printArray(int arr[]) {
		int n = arr.length;

		for (int i = 0; i < n; i++) {
			if (i != (n - 1)) {
				System.out.printf(" %d |", arr[i]);
			} else {
				System.out.printf(" %d\n", arr[i]);
			}
		}
	}

	public static void main(String args[]) {

		int arr[] = convertArray();

		System.out.print("Estado inicial:");
		printArray(arr);
		sort(arr);

		System.out.print("Resultado Final:");
		printArray(arr);
	}
}
