import java.io.*;
import java.util.*;

public class HuxleyCode {
    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);

        int m, tam, num;

        m = sc.nextInt();

        while (m > 0) {
            
            tam = sc.nextInt();
            num = sc.nextInt();
            sc.nextLine();

            String vetorS[] = new String[num];

            for (int i = 0; i < vetorS.length; i++) {
                vetorS[i] = sc.nextLine();
            }

            int vetorI[] = new int[vetorS.length];

            for (int i = 0; i < vetorI.length; i++) {

                vetorI[i] = totalOrdenacoes(vetorS[i]);
            }

            ordenaVetores(vetorI, vetorS);

            System.out.println();

            printarVetor(vetorS);

            vetorS = null;
            vetorI = null;

            m--;
        }

        sc.close();

    }

    private static void printarVetor(String[] vetorS) {

        for (int i = 0; i < vetorS.length; i++) {

            System.out.println(vetorS[i]);

        }
    }

    private static void ordenaVetores(int[] vetorI, String[] vetorS) {

        for (int i = 0; i < vetorI.length - 1; i++) {

            for (int j = 0; j < vetorI.length - 1 - i; j++) {

                if (vetorI[j] > vetorI[j + 1]) {

                    int auxInt = vetorI[j];
                    vetorI[j] = vetorI[j + 1];
                    vetorI[j + 1] = auxInt;

                    String auxString = vetorS[j];
                    vetorS[j] = vetorS[j + 1];
                    vetorS[j + 1] = auxString;

                }

            }

        }

    }

    private static int totalOrdenacoes(String string) {

        int cont = 0;

        String letras[] = string.split("");

        for (int i = 0; i < letras.length - 1; i++) {

            for (int j = 0; j < letras.length - 1 - i; j++) {

                if ((letras[j].compareTo(letras[j + 1])) > 0) {

                    String aux = letras[j];
                    letras[j] = letras[j + 1];
                    letras[j + 1] = aux;
                    cont++;

                }

            }

        }

        return cont;
    }
}
